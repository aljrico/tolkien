% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tolkien_palette.R
\name{tolkien}
\alias{tolkien}
\alias{tolkien_pal}
\title{Tolkien Colour Map.}
\usage{
tolkien(n, alpha = 1, begin = 0, end = 1, direction = 1,
  option = "Sauron", house = NULL)

tolkien_pal(alpha = 1, begin = 0, end = 1, direction = 1,
  option = "Sauron", house = NULL)

tolkien(n, alpha = 1, begin = 0, end = 1, direction = 1,
  option = "Sauron", house = NULL)
}
\arguments{
\item{n}{The number of colors (\eqn{\ge 1}) to be in the palette.}

\item{alpha}{The alpha transparency, a number in [0,1], see argument alpha in
\code{\link[grDevices]{hsv}}.}

\item{begin}{The (corrected) hue in [0,1] at which the tolkien colormap begins.}

\item{end}{The (corrected) hue in [0,1] at which the tolkien colormap ends.}

\item{direction}{Sets the order of colors in the scale. If 1, the default, colors
are ordered from darkest to lightest. If -1, the order of colors is reversed.}

\item{option}{A character string indicating the colourmap from a option to use.}

\item{house}{A character string indicating the colourmap from a option to use. This parameter is deprectaed, 'option' should be used instead.}
}
\value{
\code{tolkien} returns a character vector, \code{cv}, of color hex
codes. This can be used either to create a user-defined color palette for
subsequent graphics by \code{palette(cv)}, a \code{col =} specification in
graphics functions or in \code{par}.
}
\description{
This function creates a vector of \code{n} equally spaced colors along the
'tolkien colour map' of your selection
}
\details{
\if{html}{Here are the color scales:

  \out{<div style="text-align: center">}\figure{hogwarts-scales.png}{houses: style="width:750px;max-width:90\%;"}\out{</div>}

  }
\if{latex}{Here are the color scales:

  \out{\begin{center}}\figure{hogwarts-scales.png}\out{\end{center}}
  }


Semi-transparent colors (\eqn{0 < alpha < 1}) are supported only on some
devices: see \code{\link[grDevices]{rgb}}.
}
\examples{
library(ggplot2)
library(hexbin)

dat <- data.frame(x = rnorm(1e4), y = rnorm(1e4))
ggplot(dat, aes(x = x, y = y)) +
  geom_hex() +
  coord_fixed() +
  scale_fill_gradientn(colours = tolkien(128, option = 'Sauron'))

pal <- tolkien(256, option = "Sauron")
image(volcano, col = pal)

}
\author{
Alejandro JimÃ©nez Rico \email{aljrico@gmail.com}, \href{https://aljrico.github.io}{Personal Blog}
}
